# Generated by Django 4.2.4 on 2023-11-13 10:11

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('personaggi', '0002_alter_caratteristiche_sigla'),
    ]

    operations = [
        migrations.CreateModel(
            name='Abilita',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Codice Identificativo')),
                ('nome', models.CharField(max_length=90, verbose_name="Nome dell'abilità")),
                ('descrizione', models.TextField(blank=True, null=True, verbose_name='Descrizione')),
            ],
            options={
                'verbose_name': 'Abilità',
                'verbose_name_plural': 'Abilità',
            },
        ),
        migrations.CreateModel(
            name='abilita_punteggio',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Codice Identificativo')),
                ('valore', models.IntegerField(default=1, verbose_name='Punteggio della caratteristica')),
                ('abilita', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personaggi.abilita')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='abilita_requisito',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Codice Identificativo')),
                ('valore', models.IntegerField(default=1, verbose_name='Punteggio della caratteristica')),
                ('abilita', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personaggi.abilita')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='abilita_sbloccata',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Codice Identificativo')),
                ('abilita', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personaggi.abilita')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='abilita_tier',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Codice Identificativo')),
                ('costo', models.IntegerField(default=10, verbose_name="Costo dell'abilità")),
                ('abilita', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personaggi.abilita')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Spell',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Codice Identificativo')),
                ('nome', models.CharField(max_length=90, verbose_name="Nome dell'incantesimo")),
                ('descrizione', models.TextField(blank=True, null=True, verbose_name='Descrizione')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='spell_elemento',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Codice Identificativo')),
                ('abilita', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personaggi.spell')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tabella',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Codice Identificativo')),
                ('nome', models.CharField(max_length=90, verbose_name='Nome')),
                ('descrizione', models.TextField(blank=True, null=True, verbose_name='descrizione')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.DeleteModel(
            name='Caratteristiche',
        ),
        migrations.CreateModel(
            name='Punteggio',
            fields=[
                ('tabella_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='personaggi.tabella')),
                ('sigla', models.CharField(max_length=3, unique=True, verbose_name='Sigla')),
                ('tipo', models.CharField(choices=[('CA', 'Carattersitica'), ('ST', 'Statistica'), ('EL', 'Elemento'), ('AU', 'Aura')], max_length=2, verbose_name='Tipo di punteggio')),
            ],
            options={
                'verbose_name': 'Punteggio',
                'verbose_name_plural': 'Punteggi',
            },
            bases=('personaggi.tabella',),
        ),
        migrations.CreateModel(
            name='Tier',
            fields=[
                ('tabella_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='personaggi.tabella')),
                ('tipo', models.CharField(choices=[('T1', 'Tier 1'), ('T2', 'Tier 2'), ('T3', 'Tier 3'), ('T4', 'Tier 4')], max_length=2, verbose_name='Tier')),
            ],
            options={
                'abstract': False,
            },
            bases=('personaggi.tabella',),
        ),
        migrations.AddField(
            model_name='abilita_sbloccata',
            name='sbloccata',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personaggi.tabella'),
        ),
        migrations.AddField(
            model_name='abilita',
            name='tabelle_sbloccate',
            field=models.ManyToManyField(help_text="Tabelle sbloccate dall'abilità", related_name='abilita_sbloccante', through='personaggi.abilita_sbloccata', to='personaggi.tabella'),
        ),
        migrations.AddField(
            model_name='spell_elemento',
            name='spell',
            field=models.ForeignKey(limit_choices_to={'tipo': 'EL'}, on_delete=django.db.models.deletion.CASCADE, to='personaggi.punteggio'),
        ),
        migrations.AddField(
            model_name='spell',
            name='elementi',
            field=models.ManyToManyField(help_text="Elementi requisito dell'incantesimo", limit_choices_to={'tipo': 'EL'}, related_name='spell', through='personaggi.spell_elemento', to='personaggi.punteggio'),
        ),
        migrations.AddField(
            model_name='abilita_tier',
            name='tabella',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personaggi.tier'),
        ),
        migrations.AddField(
            model_name='abilita_requisito',
            name='requisito',
            field=models.ForeignKey(limit_choices_to={'tipo': 'CA'}, on_delete=django.db.models.deletion.CASCADE, to='personaggi.punteggio'),
        ),
        migrations.AddField(
            model_name='abilita_punteggio',
            name='punteggio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personaggi.punteggio'),
        ),
        migrations.AddField(
            model_name='abilita',
            name='caratteristica',
            field=models.ForeignKey(limit_choices_to={'tipo': 'CA'}, on_delete=django.db.models.deletion.CASCADE, to='personaggi.punteggio', verbose_name='Caratteristica'),
        ),
        migrations.AddField(
            model_name='abilita',
            name='punteggio_acquisito',
            field=models.ManyToManyField(help_text='Caratteristiche requisito di sblocco', related_name='abilita_acquisizione', through='personaggi.abilita_punteggio', to='personaggi.punteggio'),
        ),
        migrations.AddField(
            model_name='abilita',
            name='requisiti',
            field=models.ManyToManyField(help_text='Caratteristiche requisito di sblocco', limit_choices_to={'tipo': 'CA'}, related_name='abilita_req', through='personaggi.abilita_requisito', to='personaggi.punteggio'),
        ),
        migrations.AddField(
            model_name='abilita',
            name='tiers',
            field=models.ManyToManyField(help_text="Tiers in cui è presente l'abilità", related_name='abilita', through='personaggi.abilita_tier', to='personaggi.tier'),
        ),
    ]
